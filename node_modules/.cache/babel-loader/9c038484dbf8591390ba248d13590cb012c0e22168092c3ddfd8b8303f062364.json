{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactJS\\\\modulejsx\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = () => {\n    if (username && password) {\n      onLogin(username);\n    } else {\n      alert('');\n    }\n    ;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"bodyy\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"backgroundd\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"shapee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"shapee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      class: \"formm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Login Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        class: \"formm\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        class: \"formm\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        class: \"formm\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        class: \"formm\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        class: \"formm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"formm\",\n        type: \"button\",\n        onclick: \"{handleLogin}\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 1\n  }, this)\n\n  /* <div class=\"background\">\r\n  <div class=\"shapee\"></div>\r\n  <div class=\"shapee\"></div>\r\n  </div>\r\n  <form class=\"formm\">\r\n  <h3>Login Here</h3>\r\n  \r\n  <label for=\"username\" class=\"formm\">Username</label>\r\n  <input type=\"text\" placeholder=\"Username\" value = {username} onChange={(e)=> setUsername(e.target.value)} class=\"formm\"></input>\r\n  \r\n  <label for=\"password\" class=\"formm\">Password</label>\r\n  <input type=\"password\" placeholder=\"Password\" value = {password} onChange={(e)=> setPassword(e.target.value)} class=\"formm\"></input>\r\n  \r\n  <button class=\"formm\" type=\"button\" onClick={handleLogin}>Log In</button>\r\n  \r\n  </form> */;\n};\n_s(Login, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","onLogin","_s","username","setUsername","password","setPassword","handleLogin","alert","class","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","placeholder","value","onChange","e","target","onclick","_c","$RefreshReg$"],"sources":["C:/ReactJS/modulejsx/src/Login.js"],"sourcesContent":["import React, {useState} from 'react';\r\n\r\nconst Login = ({onLogin})=> {\r\n    const [username, setUsername] = useState ('');\r\n    const [password, setPassword] = useState ('');\r\n\r\n    const handleLogin = () => {\r\n        if (username&&password) {\r\n            onLogin(username);\r\n        }else{\r\n            alert('')\r\n        };\r\n    }\r\n    \r\nreturn(\r\n\r\n<div class=\"bodyy\">\r\n  <div class=\"backgroundd\">\r\n    <div class=\"shapee\" />\r\n    <div class=\"shapee\" />\r\n  </div>\r\n  <form class=\"formm\">\r\n    <h3>Login Here</h3>\r\n    <label htmlFor=\"username\" class=\"formm\">Username</label>\r\n    <input type=\"text\" placeholder=\"Username\" class=\"formm\" value = {username} onChange={(e)=> setUsername(e.target.value)}  />\r\n    <label htmlFor=\"password\" class=\"formm\">Password</label>\r\n    <input type=\"password\" placeholder=\"Password\" class=\"formm\" value = {password} onChange={(e)=> setPassword(e.target.value)} class=\"formm\"/>\r\n    <button class=\"formm\" type=\"button\" onclick=\"{handleLogin}\">Log In</button>\r\n  </form>\r\n</div>\r\n\r\n\r\n/* <div class=\"background\">\r\n<div class=\"shapee\"></div>\r\n<div class=\"shapee\"></div>\r\n</div>\r\n<form class=\"formm\">\r\n<h3>Login Here</h3>\r\n\r\n<label for=\"username\" class=\"formm\">Username</label>\r\n<input type=\"text\" placeholder=\"Username\" value = {username} onChange={(e)=> setUsername(e.target.value)} class=\"formm\"></input>\r\n\r\n<label for=\"password\" class=\"formm\">Password</label>\r\n<input type=\"password\" placeholder=\"Password\" value = {password} onChange={(e)=> setPassword(e.target.value)} class=\"formm\"></input>\r\n\r\n<button class=\"formm\" type=\"button\" onClick={handleLogin}>Log In</button>\r\n\r\n</form> */\r\n)\r\n};\r\n\r\nexport default Login;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}