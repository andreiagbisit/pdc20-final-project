{"ast":null,"code":"var _jsxFileName = \"C:\\\\PDC20-FINALS\\\\modulejsx\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Css/login.css';\nimport { BrowserRouter as Router, Link, Routes, Route, useNavigate } from 'react-router-dom';\nimport Posts from './Blog/Posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = () => {\n    if (username && password) {\n      onLogin(username);\n    } else {\n      alert('');\n    }\n    ;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-contain\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\"Hello there, Latchet\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 23,\n                  columnNumber: 38\n                }, this), \" speaking.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: username,\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 95\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 104\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleLogin,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 1\n  }, this);\n};\n_s(Login, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Link","Routes","Route","useNavigate","Posts","jsxDEV","_jsxDEV","Login","onLogin","_s","username","setUsername","password","setPassword","handleLogin","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/PDC20-FINALS/modulejsx/src/Login.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './Css/login.css';\r\nimport { BrowserRouter as Router, Link, Routes, Route, useNavigate } from 'react-router-dom';\r\nimport Posts from './Blog/Posts';\r\n\r\nconst Login = ({onLogin})=> {\r\n    const [username, setUsername] = useState ('');\r\n    const [password, setPassword] = useState ('');  \r\n    const handleLogin = () => {\r\n        if (username&&password) {\r\n            onLogin(username);\r\n        }else{\r\n            alert('')\r\n        };\r\n    }\r\n    \r\nreturn(\r\n<div className=\"body\">\r\n  <Router>\r\n    <div className=\"login-container\">\r\n      <div className=\"form-contain\">\r\n        <form>\r\n          <h1><b>Hello there, Latchet<br></br> speaking.</b></h1>\r\n          <label>Username:</label>\r\n            <input type=\"text\" value={username} onChange={(e)=> setUsername(e.target.value)}/>\r\n          <label>Password:</label>\r\n            <input type=\"text\" value={password} onChange={(e)=> setPassword(e.target.value)}/><br></br><br></br>\r\n          <button type=\"button\" onClick={handleLogin}>Login</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </Router>\r\n</div>\r\n)\r\n};\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}